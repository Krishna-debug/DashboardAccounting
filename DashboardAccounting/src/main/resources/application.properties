spring.jpa.hibernate.ddl-auto = update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
po.server.port=${DASHBOARD_ACCOUNTS_PORT_NUMBER}
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.application.name = ${DASHBOARD_ACCOUNTS_APPLICATION_NAME}


com.oodles.ticket.serverUrl = ${DASHBOARD_SPRING_TICKET_SERVER_URL}

# Development Environment Database Configuration
com.oodles.driverName = com.mysql.jdbc.Driver
com.oodles.dataBaseName.development = ${DASHBOARD_ACCOUNTS_DATABASE_NAME}
com.oodles.dataBasePort.development = ${DASHBOARD_ACCOUNTS_DATABASE_PORT}
com.oodles.dataBaseIpAddress.development = ${DASHBOARD_ACCOUNTS_IP_ADDRESS}
com.oodles.dataBaseUserName.development = ${DASHBOARD_ACCOUNTS_DATABASE_USERNAME}
com.oodles.dataBasePassword.development = ${DASHBOARD_ACCOUNTS_DATABASE_PASSWORD}


# Staging Environment Database Configuration
com.oodles.dataBaseName.staging =${DASHBOARD_ACCOUNTS_DATABASE_NAME}
com.oodles.dataBasePort.staging = ${DASHBOARD_ACCOUNTS_DATABASE_PORT}
com.oodles.dataBaseIpAddress.staging = ${DASHBOARD_SPRING_IP_ADDRESS}
com.oodles.dataBaseUserName.staging = ${DASHBOARD_ACCOUNTS_DATABASE_USERNAME}
com.oodles.dataBasePassword.staging =${DASHBOARD_ACCOUNTS_DATABASE_PASSWORD}

# Production Environment Database Configuration
com.oodles.dataBaseName.production = ${DASHBOARD_ACCOUNTS_DATABASE_NAME}
com.oodles.dataBasePort.production = ${DASHBOARD_ACCOUNTS_DATABASE_PORT}
com.oodles.dataBaseIpAddress.production = ${DASHBOARD_ACCOUNTS_IP_ADDRESS}
com.oodles.dataBaseUserName.production = ${DASHBOARD_ACCOUNTS_DATABASE_USERNAME}
com.oodles.dataBasePassword.production = ${DASHBOARD_ACCOUNTS_DATABASE_PASSWORD}

com.oodles.accounts.key=${DASHBOARD_ACCOUNTS_ENCRYPTION_KEY}
com.oodles.accounts.new.key=${DASHBOARD_ACCOUNTS_NEW_ENCRYPTION_KEY}
com.oodles.util.encryptionKey=${DASHBOARD_ACCOUNTS_NEW_ENCRYPTION_KEY} 


com.oodles.project.margin.key=${DASHBOARD_PROJECT_MARGIN_ENCRYPTION_KEY}
com.oodles.security.deposit.key=${DASHBOARD_SECURITY_DEPOSIT_ENCRYPTION_KEY}


jwt.secret.key = ${JWT_SECRET_KEY}
#Currently Selected Envoirment
spring.profiles.active = ${DASHBOARD_ACCOUNTS_CURRENT_ENVIRONMENT}

# Kafka
#spring.kafka.bootstrap-servers=${DASHBOARD_KAFKA_HOST}:${DASHBOARD_KAFKA_PORT}

#Cron Schedule
#cron.schedule = ${ACCOUNT_COMPLIANT_STATUS_CHANGE}


#Mail Properties
spring.mail.host = smtp.gmail.com
spring.mail.port = 587
spring.mail.username = ${DASHBOARD_SPRING_EMAIL}
spring.mail.password = ${DASHBOARD_SPRING_PASSWORD}
spring.mail.properties.mail.smtp.starttls.enable = true
spring.mail.properties.mail.smtp.starttls.required = true
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.connectiontimeout = 5000
spring.mail.properties.mail.smtp.timeout = 5000
spring.mail.properties.mail.smtp.writetimeout = 5000

#Mail SES Properties
com.oodles.sesFromAddress=${DASHBOARD_SPRING_EMAIL}
com.oodles.mail.sesRegion=${DASHBOARD_SES_REGION}
com.oodles.mail.sesPort=${DASHBOARD_SES_PORT}
com.oodles.mail.protocol=${DASHBOARD_SES_PROTOCOL}
com.oodles.mail.username=${DASHBOARD_SES_USERNAME}
com.oodles.mail.password=${DASHBOARD_SES_PASSWORD}

# Email ids

spring.mail.overrides=${DASHBOARD_SPRING_MAIL_OVERRIDES}
spring.mail.overrides.development=${DASHBOARD_SPRING_MAIL_DEVELOPMENT}
spring.mail.overrides.localDevelopment=${DASHBOARD_SPRING_MAIL_LOCALDEVELOPMENT}
spring.mail.overrides.staging=${DASHBOARD_SPRING_MAIL_STAGING}
//com.oodles.infra.email=${INFRA_EMAIL}
//com.oodles.accounts.email=${FINANCE_EMAIL}
com.oodles.dashbordAdmin.email = ${DASHBOARD_ADMIN_EMAIL}
//com.oodles.manishMadan.email=${MANISH_MADAN_EMAIL}
com.oodles.hr.email=${HR_EMAIL}
//com.oodles.devops.email=${DEVOPS_EMAIL}
com.oodles.accounts.email=${ACCOUNTS_EMAIL}
com.oodles.legal.email=${LEGAL_EMAIL}
aws.s3.url=${S3_URL}
com.oodles.resourcing.email=${RESOURCING_EMAIL}
# AWS Credentials
cloud.aws.credentials.accessKey=${ACCESS_KEY}
cloud.aws.credentials.secretKey=${SECRET_KEY}
app.awsServices.bucketName=${BUCKET_NAME}
cloud.aws.region.static=us-east-1
cloud.aws.stack.auto=false
cloud.aws.payroll.folder.name=/payroll



#actuator 
#management.endpoints.web.base-path=/myAccounts
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*
spring.boot.admin.client.enabled=true
spring.boot.admin.client.api-path=myAccounts
info.app.name=Accounts Application
info.app.type=Spring Boot

spring.address =${SPRING_ADDRESS}
env.url=${ENVIRONMENT_URL}
swagger.host=${SWAGGER_HOST}

eureka.client.serviceUrl.defaultZone=${REGISTRY_SERVICE_DEFAULT_ZONE}
eureka.instance.preferIpAddress=true
##eureka.instance.preferIpAddress=false
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.instance.hostname=${REGISTRY_SERVICE_INSTANCE_HOSTNAME}
dashAccounts.swagger.docs.url=${DASH_ACCOUNTS_SWAGGER_DOCS_URL}


# Enable JavaMelody auto-configuration (optional, default: true)
javamelody.enabled=true
# Data source names to exclude from monitoring (optional, comma-separated)
javamelody.excluded-datasources=secretSource,topSecretSource
# Enable monitoring of Spring services and controllers (optional, default: true)
javamelody.spring-monitoring-enabled=true
# Initialization parameters for JavaMelody (optional)
# See: https://github.com/javamelody/javamelody/wiki/UserGuide#6-optional-parameters
#    log http requests:
#javamelody.init-parameters.log=true
#    to exclude images, css, fonts and js urls from the monitoring:
# javamelody.init-parameters.url-exclude-pattern=(/webjars/.*|/css/.*|/images/.*|/fonts/.*|/js/.*)
#    to aggregate digits in http requests:
# javamelody.init-parameters.http-transform-pattern: \d+
#    to add basic auth:
# javamelody.init-parameters.authorized-users=admin:pwd
#    to change the default storage directory:
# javamelody.init-parameters.storage-directory=/tmp/javamelody
#    to change the default "/monitoring" path:
# javamelody.init-parameters.monitoring-path=/admin/performance

